//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ExpenseTracker.CategoriesManagerServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Category", Namespace="http://schemas.datacontract.org/2004/07/ExpenseCommon")]
    [System.SerializableAttribute()]
    public partial class Category : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryID {
            get {
                return this.CategoryIDField;
            }
            set {
                if ((this.CategoryIDField.Equals(value) != true)) {
                    this.CategoryIDField = value;
                    this.RaisePropertyChanged("CategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CategoriesManagerServiceReference.ICategoriesManagerService")]
    public interface ICategoriesManagerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategoriesManagerService/AddCategory", ReplyAction="http://tempuri.org/ICategoriesManagerService/AddCategoryResponse")]
        bool AddCategory(ExpenseTracker.CategoriesManagerServiceReference.Category category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategoriesManagerService/AddCategory", ReplyAction="http://tempuri.org/ICategoriesManagerService/AddCategoryResponse")]
        System.Threading.Tasks.Task<bool> AddCategoryAsync(ExpenseTracker.CategoriesManagerServiceReference.Category category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategoriesManagerService/UpdateCategory", ReplyAction="http://tempuri.org/ICategoriesManagerService/UpdateCategoryResponse")]
        bool UpdateCategory(ExpenseTracker.CategoriesManagerServiceReference.Category category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategoriesManagerService/UpdateCategory", ReplyAction="http://tempuri.org/ICategoriesManagerService/UpdateCategoryResponse")]
        System.Threading.Tasks.Task<bool> UpdateCategoryAsync(ExpenseTracker.CategoriesManagerServiceReference.Category category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategoriesManagerService/RemoveCategory", ReplyAction="http://tempuri.org/ICategoriesManagerService/RemoveCategoryResponse")]
        bool RemoveCategory(ExpenseTracker.CategoriesManagerServiceReference.Category category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategoriesManagerService/RemoveCategory", ReplyAction="http://tempuri.org/ICategoriesManagerService/RemoveCategoryResponse")]
        System.Threading.Tasks.Task<bool> RemoveCategoryAsync(ExpenseTracker.CategoriesManagerServiceReference.Category category);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategoriesManagerService/GetCategories", ReplyAction="http://tempuri.org/ICategoriesManagerService/GetCategoriesResponse")]
        System.Collections.Generic.List<ExpenseTracker.CategoriesManagerServiceReference.Category> GetCategories(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICategoriesManagerService/GetCategories", ReplyAction="http://tempuri.org/ICategoriesManagerService/GetCategoriesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ExpenseTracker.CategoriesManagerServiceReference.Category>> GetCategoriesAsync(int userId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICategoriesManagerServiceChannel : ExpenseTracker.CategoriesManagerServiceReference.ICategoriesManagerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CategoriesManagerServiceClient : System.ServiceModel.ClientBase<ExpenseTracker.CategoriesManagerServiceReference.ICategoriesManagerService>, ExpenseTracker.CategoriesManagerServiceReference.ICategoriesManagerService {
        
        public CategoriesManagerServiceClient() {
        }
        
        public CategoriesManagerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CategoriesManagerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CategoriesManagerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CategoriesManagerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AddCategory(ExpenseTracker.CategoriesManagerServiceReference.Category category) {
            return base.Channel.AddCategory(category);
        }
        
        public System.Threading.Tasks.Task<bool> AddCategoryAsync(ExpenseTracker.CategoriesManagerServiceReference.Category category) {
            return base.Channel.AddCategoryAsync(category);
        }
        
        public bool UpdateCategory(ExpenseTracker.CategoriesManagerServiceReference.Category category) {
            return base.Channel.UpdateCategory(category);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateCategoryAsync(ExpenseTracker.CategoriesManagerServiceReference.Category category) {
            return base.Channel.UpdateCategoryAsync(category);
        }
        
        public bool RemoveCategory(ExpenseTracker.CategoriesManagerServiceReference.Category category) {
            return base.Channel.RemoveCategory(category);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveCategoryAsync(ExpenseTracker.CategoriesManagerServiceReference.Category category) {
            return base.Channel.RemoveCategoryAsync(category);
        }
        
        public System.Collections.Generic.List<ExpenseTracker.CategoriesManagerServiceReference.Category> GetCategories(int userId) {
            return base.Channel.GetCategories(userId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ExpenseTracker.CategoriesManagerServiceReference.Category>> GetCategoriesAsync(int userId) {
            return base.Channel.GetCategoriesAsync(userId);
        }
    }
}
