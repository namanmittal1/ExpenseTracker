//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ExpenseTracker.StatisticsAnalyticsServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AnalyticsData", Namespace="http://schemas.datacontract.org/2004/07/ExpenseTrackerService.StatisticsAnalytics" +
        "Module")]
    [System.SerializableAttribute()]
    public partial class AnalyticsData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RadioHomeSelectedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RadioNoneSelectedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RadioOfficeSelectedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ItemName {
            get {
                return this.ItemNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemNameField, value) != true)) {
                    this.ItemNameField = value;
                    this.RaisePropertyChanged("ItemName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RadioHomeSelected {
            get {
                return this.RadioHomeSelectedField;
            }
            set {
                if ((this.RadioHomeSelectedField.Equals(value) != true)) {
                    this.RadioHomeSelectedField = value;
                    this.RaisePropertyChanged("RadioHomeSelected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RadioNoneSelected {
            get {
                return this.RadioNoneSelectedField;
            }
            set {
                if ((this.RadioNoneSelectedField.Equals(value) != true)) {
                    this.RadioNoneSelectedField = value;
                    this.RaisePropertyChanged("RadioNoneSelected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RadioOfficeSelected {
            get {
                return this.RadioOfficeSelectedField;
            }
            set {
                if ((this.RadioOfficeSelectedField.Equals(value) != true)) {
                    this.RadioOfficeSelectedField = value;
                    this.RaisePropertyChanged("RadioOfficeSelected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Source {
            get {
                return this.SourceField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceField, value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StatisticsData", Namespace="http://schemas.datacontract.org/2004/07/ExpenseTrackerService.StatisticsAnalytics" +
        "Module")]
    [System.SerializableAttribute()]
    public partial class StatisticsData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float ExpenseAmountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float ExpenseAmount {
            get {
                return this.ExpenseAmountField;
            }
            set {
                if ((this.ExpenseAmountField.Equals(value) != true)) {
                    this.ExpenseAmountField = value;
                    this.RaisePropertyChanged("ExpenseAmount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="StatisticsAnalyticsServiceReference.IStatisticsAnalyticsService")]
    public interface IStatisticsAnalyticsService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatisticsAnalyticsService/GetAnalyticsData", ReplyAction="http://tempuri.org/IStatisticsAnalyticsService/GetAnalyticsDataResponse")]
        System.Collections.Generic.List<ExpenseTracker.StatisticsAnalyticsServiceReference.AnalyticsData> GetAnalyticsData(int LoggedUserId, int categoryId, int itemId, string fromDate, string toDate, string source);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatisticsAnalyticsService/GetAnalyticsData", ReplyAction="http://tempuri.org/IStatisticsAnalyticsService/GetAnalyticsDataResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ExpenseTracker.StatisticsAnalyticsServiceReference.AnalyticsData>> GetAnalyticsDataAsync(int LoggedUserId, int categoryId, int itemId, string fromDate, string toDate, string source);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatisticsAnalyticsService/GetExpensesFromDataBase", ReplyAction="http://tempuri.org/IStatisticsAnalyticsService/GetExpensesFromDataBaseResponse")]
        System.Collections.Generic.List<ExpenseTracker.StatisticsAnalyticsServiceReference.StatisticsData> GetExpensesFromDataBase(int LoggedUserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStatisticsAnalyticsService/GetExpensesFromDataBase", ReplyAction="http://tempuri.org/IStatisticsAnalyticsService/GetExpensesFromDataBaseResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ExpenseTracker.StatisticsAnalyticsServiceReference.StatisticsData>> GetExpensesFromDataBaseAsync(int LoggedUserId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStatisticsAnalyticsServiceChannel : ExpenseTracker.StatisticsAnalyticsServiceReference.IStatisticsAnalyticsService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StatisticsAnalyticsServiceClient : System.ServiceModel.ClientBase<ExpenseTracker.StatisticsAnalyticsServiceReference.IStatisticsAnalyticsService>, ExpenseTracker.StatisticsAnalyticsServiceReference.IStatisticsAnalyticsService {
        
        public StatisticsAnalyticsServiceClient() {
        }
        
        public StatisticsAnalyticsServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StatisticsAnalyticsServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StatisticsAnalyticsServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StatisticsAnalyticsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<ExpenseTracker.StatisticsAnalyticsServiceReference.AnalyticsData> GetAnalyticsData(int LoggedUserId, int categoryId, int itemId, string fromDate, string toDate, string source) {
            return base.Channel.GetAnalyticsData(LoggedUserId, categoryId, itemId, fromDate, toDate, source);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ExpenseTracker.StatisticsAnalyticsServiceReference.AnalyticsData>> GetAnalyticsDataAsync(int LoggedUserId, int categoryId, int itemId, string fromDate, string toDate, string source) {
            return base.Channel.GetAnalyticsDataAsync(LoggedUserId, categoryId, itemId, fromDate, toDate, source);
        }
        
        public System.Collections.Generic.List<ExpenseTracker.StatisticsAnalyticsServiceReference.StatisticsData> GetExpensesFromDataBase(int LoggedUserId) {
            return base.Channel.GetExpensesFromDataBase(LoggedUserId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ExpenseTracker.StatisticsAnalyticsServiceReference.StatisticsData>> GetExpensesFromDataBaseAsync(int LoggedUserId) {
            return base.Channel.GetExpensesFromDataBaseAsync(LoggedUserId);
        }
    }
}
